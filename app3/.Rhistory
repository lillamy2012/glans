print("pp")
else{
seqtouse = unlist(setdiff(unique(c(seqs[i,])),"No coverage."))
print(seqtouse)
}
}
seqtouse=matrix(NA,nrow(seqs))
for (i in 1:nrow(seqs)){
if(length(setdiff(unique(c(seqs[i,])),"No coverage."))>1)
print("pp")
else{
seqtouse[i] = unlist(setdiff(unique(c(seqs[i,])),"No coverage."))
}
}
seqtouse[
,]
head(infile)
fasta_format = function(infile){
nrSamples = length(grep("Sample",colnames(infile)))
seqs = infile[,c("X",paste0("X.",1:(nrSamples-1)))]
seqtouse=matrix(NA,nrow(seqs))
for (i in 1:nrow(seqs)){
if(length(setdiff(unique(c(seqs[i,])),"No coverage."))>1)
print("pp")
else{
seqtouse[i] = unlist(setdiff(unique(c(seqs[i,])),"No coverage."))
}
}
results = cbind(infile$Accession,seqtouse)
}
asta_format = fasta_format(indata)
head(indata)
seqs = infile[,c("X",paste0("X.",1:(nrSamples-1)))]
asta_format = fasta_format(indata)
debug(fasta_format)
asta_format = fasta_format(indata)
ls()
head(infile)
ls()
nrSamples
asta_format = fasta_format(indata)
c("X", paste0("X.", 1:(nrSamples - 1)))
infile[,c("X","X.1","X.2","X.3")]
colnames(infile)
q
head(indata)
head(dd)
infile=dd
head(infile)
asta_format = fasta_format(infile = )
asta_format = fasta_format(infile)
asta_format
head(asta_format)
fasta_format = function(infile){
nrSamples = length(grep("Sample",colnames(infile)))
seqs = infile[,c("X",paste0("X.",1:(nrSamples-1)))]
seqtouse=matrix(NA,nrow(seqs))
for (i in 1:nrow(seqs)){
if(length(setdiff(unique(c(seqs[i,])),"No coverage."))>1)
print("pp")
else{
seqtouse[i] = unlist(setdiff(unique(c(seqs[i,])),"No coverage."))
}
}
results = data.frame(infile$Accession,seqtouse)
}
asta_format = fasta_format(infile)
asta_format
head(asta_format)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
head(indata)
grep("AT1G19890\\|H3.10",indata$Accession)
shiny::runApp()
source('~/glans/app3/functions.R')
shiny::runApp()
fasta = "MARTKQTARKSTGGKGPRKELATKAARKTRRPYRGGVKRAHRFRPGTVALREIRKYQKSTDLLIRKLPFQRLVREIAQDFKVDLRFQSHAVLALQEAAEAYLVGLFEDTNLCAIHAKRVTIMSKDIQLARRIRGERA*"
index=grep("AT1G19890\\|H3.10",indata$Accession)
index
indind=indata[index,]
ProteinPlotMat(fasta,indind)
debug(ProteinPlotMat)
ProteinPlotMat(fasta,indind)
l()
ls()
modtype
ii
ii
ii
i
i
i
class(covmat)
dim(covmat)
i
length(match_ind)
i
i
i
q
undebug(ProteinPlotMat)
ProteinPlotMat(fasta,indind)
source('~/glans/app3/functions.R')
#print(protein_pos)
shiny::runApp()
shiny::runApp()
shiny::runApp()
head(indata)
indata[indata$Accession=="AT1G19890|H3.10"]
indata[indata$Accession=="AT1G19890|H3.10",]
indata[indata$Accession=="AT1G19890|H3.10",52]
indata[indata$Accession=="AT1G19890|H3.10",][52]
indata[indata$Accession=="AT1G19890|H3.10",][52,]
indata[indata$Accession=="AT1G19890|H3.10",][51,]
indata[indata$Accession=="AT1G19890|H3.10",][51,"Modifications"]
shiny::runApp()
shiny::runApp()
indata[indata$Accession=="AT1G19890|H3.10",][51,"Modifications"]
aa = indata[indata$Accession=="AT1G19890|H3.10",]
grep("Dimethyl",aa$Modifications)
)
grep("Dimethyl",aa$Modifications,value=T)
head(aa)
head(aa[1:10,])
grep("(Dimethyl)",aa$Modifications,value=T)
grep(" (Dimethyl)",aa$Modifications,value=T)
grep("(Dimethyl)",aa$Modifications,value=T)
dim(aa)
aa$Modifications
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
ls()
aa
colnames(aa)
aa[,2:9]
aa[,c(2,9)]
grep("Dimethyl",aa$Modifications)
aa[,grep("Dimethyl",aa$Modifications)]
aa[grep("Dimethyl",aa$Modifications),c(2,9)]
shiny::runApp()
shiny::runApp()
shiny::runApp()
fasta
str_locate_all(pattern = "QTARKSTGGKAPRK", fasta))
str_locate_all(pattern = "QTARKSTGGKAPRK", fasta)
str_locate_all(pattern = "QTARKSTGGKAPR", fasta)
str_locate_all(pattern = "QTARKSTGGKAP", fasta)
str_locate_all(pattern = "QTARKSTGGKA", fasta)
str_locate_all(pattern = "QTARKSTGGK", fasta)
shiny::runApp()
shiny::runApp()
match_ind=(str_locate_all(pattern = Sequences, fasta))
Sequences = indind$Sequence
match_ind=(str_locate_all(pattern = Sequences, fasta))
match_ind
lapply(match_ind,dim)
sapply(match_ind,dim)
summary(sapply(match_ind,dim))
(sapply(match_ind,dim))
(sapply(match_ind,max))
(sapply(match_ind,"[[",1))
(lapply(match_ind,"[[",1))
(lapply(match_ind,"[",1))
(sapply(match_ind,"[",1))
which(is.na(sapply(match_ind,"[",1)))
indind[52,]
indind[256,]
indind[429,]
indind[989,]
indind[which(is.na(sapply(match_ind,"[",1))),"Sequence"]
fasta
str_locate_all("QTARKSTGGKAPRK",fasta)
str_locate_all("STELLIRKLPFQR",fasta)
str_locate_all("QTARKSTGGKAPRKQLATK",fasta)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dim(indata)
indata[7576,]
shiny::runApp()
shiny::runApp()
shiny::runApp()
a = "AT3G27360|H3.1"
grep(a,indata$Accession)
tail(grep(a,indata$Accession))
tail(grep(a,indata$Accession),value=T)
tail(grep(a,indata$Accession,value=TRUE))
a
a = "AT3G27360\\|H3.1"
tail(grep(a,indata$Accession,value=TRUE))
?sub
a = "AT3G27360|H3.1"
sub("|","\\",a)
sub("|","\\",a,fixed=T)
tail(grep(a,indata$Accession,value=TRUE,fixed=T))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
ss =  DIQLARRIRGERA
ss =  "DIQLARRIRGERA"
head(infile)
infile$X.3[2]
ff = infile$X.3[2]
str_locate_all(pattern = ss, ff))
str_locate_all(pattern = ss, ff)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?"plotOutput"
?renderPrint
?textOutput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dd = read.csv("../../Desktop/Borg_coverage_fasta.csv" header=TRUE, sep=input$sep,
quote="",skip=2,dec=",",comment="")
dd = read.csv("../../Desktop/Borg_coverage_fasta.csv" ,header=TRUE, sep=input$sep,
quote="",skip=2,dec=",",comment="")
dd = read.csv("../../Desktop/Borg_coverage_fasta.csv" ,header=TRUE, sep=";",
quote="",skip=2,dec=",",comment="")
head(dd)
extra = dd[1,]
extra
dd = dd[!is.na(dd[,1]),]
dd
head(dd)
colnames(dd)
extra
colnames(dd)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
for(i in 1:length(v)){
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
res = matrix()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
#print(totmat)
shiny::runApp()
for(i in 1:nrow(stat_nr)){
}\
shiny::runApp()
shiny::runApp()
shiny::runApp()
aa = read.table("../../Desktop/Michael Borg repeat of samples pollen from 2015-07-03 histone-db, many mods, proteins UNgrouped, regular and prop.xlsm")
aa = read.table("../../Desktop/Borg_psm_details.csv")
aa = read.table("../../Desktop/Borg_psm_details.csv",header=T,sep=";",dec=",")
head(aa)
aa = read.table("../../Desktop/Borg_psm_details.csv",header=T,sep=";",dec=",",skip=2)
head(aa)
aa = read.table("../../Desktop/Borg_psm_details.csv",header=F,sep=";",dec=",",skip=2)
head(aa)
aa$V10
aa$V11
ass = aa$V11
ass
modtype=regmatches(ass, gregexpr("(?<=\\().*?(?=\\))", ass, perl=T))
modtype
modtype = unlist(modtype)
modtype = unique(modtype)
modtype
indata=aa
head(indata)
tab=list(
"Oxidation"="",
"Acetyl"="Ac",
"Propionyl"="",
"Gln->pyro-Glu"="",
"Ubi_LRGG"="UBi",
"GlyGly"="UBi",
"Trimethyl"="3meth",
"Dimethyl"="2meth",
"Methyl"= "Meth",
"Phospho"= "Ph",
"PropMeth"="Meth" ,
"Methylthio"=""
)
convert <-function(indata,table){
for(i in 1:length(table)){
indata$Modifications=sub(names(table)[i],table[[i]],indata$Modifications)
}
}
ttt = convert(indata,tab)
i
convert <-function(indata,table){
for(i in 1:length(table)){
print(i)
indata$Modifications=sub(names(table)[i],table[[i]],indata$Modifications)
}
}
ttt = convert(indata,tab)
convert <-function(indata,table){
for(i in 1:length(table)){
print(i)
print(sub(names(table)[i],table[[i]],indata$Modifications))
}
}
ttt = convert(indata,tab)
convert <-function(indata,table){
for(i in 1:length(table)){
print(i)
print(names(table)[i])
print(sub(names(table)[i],table[[i]],indata$Modifications))
}
}
ttt = convert(indata,tab)
convert <-function(indata,table){
for(i in 1:length(table)){
print(i)
print(names(table)[i])
print(table[[i]])
print(sub(names(table)[i],table[[i]],indata$Modifications))
}
}
ttt = convert(indata,tab)
convert <-function(indata,table){
for(i in 1:length(table)){
print(i)
print(names(table)[i])
print(table[[i]])
print(indata$Modifications)
print(sub(names(table)[i],table[[i]],indata$Modifications))
}
}
ttt = convert(indata,tab)
head(indata)
head(indataV10)
head(indata$V10)
head(indata$V11)
colnames(indata)[11]
colnames(indata)[11]="Modifications"
ttt = convert(indata,tab)
convert <-function(indata,table){
for(i in 1:length(table)){
print(i)
print(names(table)[i])
print(table[[i]])
#print(indata$Modifications)
print(sub(names(table)[i],table[[i]],indata$Modifications))
}
}
ttt = convert(indata,tab)
tab[1]
sub(names(tab)[1],tab[[i]],indata$Modifications)
sub(names(tab)[1],tab[[1]],indata$Modifications)
convert <-function(indata,table){
for(i in 1:length(table)){
#print(i)
#print(names(table)[i])
#print(table[[i]])
#print(indata$Modifications)
indata$Modifications=(sub(names(table)[i],table[[i]],indata$Modifications))
}
return(indata)
}
ttt = convert(indata,tab)
ttt
ttt$Modifications
indata[2600,]
?sub
convert <-function(indata,table){
for(i in 1:length(table)){
#print(i)
#print(names(table)[i])
#print(table[[i]])
#print(indata$Modifications)
indata$Modifications=(gsub(names(table)[i],table[[i]],indata$Modifications))
}
return(indata)
}
ttt = convert(indata,tab)
ttt$Modifications
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
print(indata)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
"GlyGly"="UBi2",
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
